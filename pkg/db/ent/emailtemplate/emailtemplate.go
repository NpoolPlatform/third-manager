// Code generated by ent, DO NOT EDIT.

package emailtemplate

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the emailtemplate type in the database.
	Label = "email_template"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldLangID holds the string denoting the lang_id field in the database.
	FieldLangID = "lang_id"
	// FieldDefaultToUsername holds the string denoting the default_to_username field in the database.
	FieldDefaultToUsername = "default_to_username"
	// FieldUsedFor holds the string denoting the used_for field in the database.
	FieldUsedFor = "used_for"
	// FieldSender holds the string denoting the sender field in the database.
	FieldSender = "sender"
	// FieldReplyTos holds the string denoting the reply_tos field in the database.
	FieldReplyTos = "reply_tos"
	// FieldCcTos holds the string denoting the cc_tos field in the database.
	FieldCcTos = "cc_tos"
	// FieldSubject holds the string denoting the subject field in the database.
	FieldSubject = "subject"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// Table holds the table name of the emailtemplate in the database.
	Table = "email_templates"
)

// Columns holds all SQL columns for emailtemplate fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAppID,
	FieldLangID,
	FieldDefaultToUsername,
	FieldUsedFor,
	FieldSender,
	FieldReplyTos,
	FieldCcTos,
	FieldSubject,
	FieldBody,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/third-manager/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultReplyTos holds the default value on creation for the "reply_tos" field.
	DefaultReplyTos []string
	// DefaultCcTos holds the default value on creation for the "cc_tos" field.
	DefaultCcTos []string
	// DefaultSubject holds the default value on creation for the "subject" field.
	DefaultSubject string
	// DefaultBody holds the default value on creation for the "body" field.
	DefaultBody string
	// BodyValidator is a validator for the "body" field. It is called by the builders before save.
	BodyValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
